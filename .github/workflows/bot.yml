name: Run Telegram & Discord Bot

on:
  schedule:
    - cron: "0 0 * * *"    # Runs at midnight UTC
    - cron: "0 12 * * *"   # Runs at noon UTC
  workflow_dispatch:  # Allows manual execution

jobs:
  run-bot:
    runs-on: ubuntu-latest
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      CHAT_ID: ${{ secrets.CHAT_ID }}
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
      REPO: ${{ secrets.REPO }}
      HELIUS_API_KEY: ${{ secrets.HELIUS_API_KEY }}
      TOKEN_ADDRESS: ${{ secrets.TOKEN_ADDRESS }}

    steps:
      # Step 1: Checkout the repository with the correct token for push access
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Ensures the workflow has push access

      # Step 2: Set up Node.js environment
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Step 3: Install dependencies
      - run: npm install

      # Step 4: Install Playwright Browsers
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps  # Install the required Playwright browsers

      # Step 5: Run the bot script
      - run: npx ts-node api/bot.ts  # Run the bot, which updates JSON files

      # Step 6: Commit and Push Data Changes to GitHub
      - name: Commit and Push Data Changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .  # Stages all changed files
          git commit -m "Update bot metrics data" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Allows push access
